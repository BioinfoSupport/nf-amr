#!/usr/bin/env Rscript

#-#-#-#-#-#-#-#-#-#-#-#-#
# Argument parsing
#-#-#-#-#-#-#-#-#-#-#-#-#
library(optparse)
option_list <- list(
    make_option("--fasta",help="Path to the input FASTA file",default = 'assembly.fasta'),
    make_option("--meta-json",help="Path to JSON file with metadata",default = 'meta.json'),
    make_option("--resfinder-json",help="Path to JSON file generated by resfinder",default = 'resfinder/data.json'),
    make_option("--plasmidfinder-json",help="Path to JSON file generated by plasmidfinder",default = 'plasmidfinder/data.json'),
    make_option("--mlst-json",help="Path to JSON file generated by mlst",default = 'mlst/data.json'),
    make_option("--ani-tsv",help="Path to a TSV file with ANI",default = 'ani.tsv'),
    make_option("--out", help="Path to output file (RDS format)",default="isolate_data.rds")
)
opt <- parse_args(OptionParser(option_list=option_list))


#-#-#-#-#-#-#-#-#-#-#-#-#
# Script
#-#-#-#-#-#-#-#-#-#-#-#-#

suppressPackageStartupMessages({
	library(tidyverse)
	library(Biostrings)
})


read_meta_json <- function(data_json) {
	jsonlite::fromJSON(data_json) |> 
		enframe(name = NULL) |> 
		unnest_wider(value) |> 
		unnest_wider(c(assembly,org),names_sep = "_")
}

read_mlst_json <- function(data_json) {
	jsonlite::fromJSON(data_json)$mlst$results$sequence_type |>
		enframe(value="mlst_type",name=NULL)
}

read_resfinder_json <- function(data_json) {
	jsonlite::fromJSON(data_json)$seq_regions |>
		tibble() |>
		unnest_wider(1) |>
		mutate(contig_id = str_replace(query_id," .*",""))
}

read_plasmidfinder_json <- function(data_json) {
	jsonlite::fromJSON(data_json,simplifyVector=FALSE) |>
		pluck("plasmidfinder","results") |>
		modify_tree(leaf = ~ if (.=="No hit found") list() else .) |>
		enframe("db_lev1") |> 
		unnest_longer(value,indices_to = "db_lev2") |>
		unnest_longer(value,indices_to = "contig_name",values_to = "feature") |>
		unnest_wider(feature,names_sep = "_") |>
		mutate(contig_id = str_replace(feature_contig_name," .*",""))	|>
		relocate(contig_id)
}

contig_stats <- function(fa) {
	tibble(contig_name = names(fa),contig_len=lengths(fa)) |>
		mutate(contig_id = str_replace(contig_name," .*",""))
}

# Read data
#setwd("/Users/prados/Documents/nf-amr/work/c3/58f6ae999f59767a68fc0aa7610d6a")


# Write output
meta <- read_meta_json(opt$meta)
mlst <- read_mlst_json(opt$mlst) |> mutate(assembly_id=meta$assembly_id) |> relocate(any_of(c("assembly_id","contig_id")))
resfinder <- read_resfinder_json(opt$`resfinder-json`) |> mutate(assembly_id=meta$assembly_id) |> relocate(any_of(c("assembly_id","contig_id")))
plasmidfinder <- read_plasmidfinder_json(opt$`plasmidfinder-json`) |> mutate(assembly_id=meta$assembly_id) |> relocate(any_of(c("assembly_id","contig_id")))
contigs <- contig_stats(readDNAStringSet(opt$fasta)) |> mutate(assembly_id=meta$assembly_id) |> relocate(any_of(c("assembly_id","contig_id")))

list(
	meta = meta,
	contigs = contigs,
	ANI = read_tsv(opt$`ani-tsv`),
	resfinder = resfinder,
	plasmidfinder = plasmidfinder
) |>
saveRDS(opt$out)



